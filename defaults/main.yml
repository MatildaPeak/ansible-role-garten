---

# The data collection period.
# Must at lest 10 and be a divisor of 60
# i.e. one of 10, 12, 15, 20, 30
collection_period_m: 10
# Use a cache for the bike data.
# This allows us to transmit changes rather than every message.
# It is not a boolean - just 'yes' or 'no' strings.
use_bike_cache: 'yes'

# The URL where Chronicler can be located.
# Here we're expecting it as a service in the
# 'chronicler' namespace.
chronicler_url: http://chronicler.chronicler.svc.cluster.local:9090
# And the inbound resource path,
# where inbound messages are posted...
chronicler_resource: inbound

# TfL (Transport for London) application credentials.
# An ID and key for the TfL Unified API.
tfl_app_id: "{{ lookup('env', 'TFL_APP_ID') }}"
tfl_app_key: "{{ lookup('env', 'TFL_APP_KEY') }}"

# Sentry Data Source Name (DSN).
# This is sensitive, it's optional.
# The user needs to define it if events are to be passed to Sentry.
# See https://sentry.io
sentry_dsn: ''

# NOTE: meta.name(space) comes from CR metadata
#       when run with Ansible Operator
#       deploy/crds has an example CR for reference
name: "{{ meta.name|default('garten') }}"
namespace: "{{ meta.namespace|default('garten') }}"

# The image tag and pull policy
image_tag: 2019.4
image_pull_policy: IfNotPresent

# To uninstall from the cluster
# set state: absent
state: present
